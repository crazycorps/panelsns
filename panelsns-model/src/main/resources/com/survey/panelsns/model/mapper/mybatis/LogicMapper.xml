<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.survey.panelsns.model.entity.Logic">
  <resultMap id="BaseResultMap" type="com.survey.panelsns.model.entity.Logic">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="ques_naire_id" jdbcType="BIGINT" property="quesNaireId" />
    <result column="ques_id" jdbcType="BIGINT" property="quesId" />
    <result column="ques_option_id" jdbcType="BIGINT" property="quesOptionId" />
    <result column="type" jdbcType="INTEGER" property="type" />
    <result column="ctl_type" jdbcType="INTEGER" property="ctlType" />
    <result column="out_type" jdbcType="INTEGER" property="outType" />
    <result column="out_value" jdbcType="INTEGER" property="outValue" />
    <result column="version" jdbcType="INTEGER" property="version" />
    <result column="remark" jdbcType="VARCHAR" property="remark" />
  </resultMap>
  <sql id="Base_Column_List">
    id, ques_naire_id, ques_id, ques_option_id, type, ctl_type, out_type, out_value, 
    version, remark
  </sql>
  <select id="selectById" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from logic
    where id = #{id,jdbcType=BIGINT}
  </select>
  <select id="matchCount" parameterType="com.survey.panelsns.model.entity.Logic" resultType="java.lang.Long">
    select count(*) from jian_user_follow
    where 1=1
    <if test="entity.fUid != null">
        and f_uid = #{entity.fUid,jdbcType=BIGINT}
    </if> 
    <if test="entity.uid != null">
        and uid = #{entity.uid,jdbcType=BIGINT}
    </if>
  </select>
  <delete id="deleteById" parameterType="java.lang.Long">
    delete from logic
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="com.survey.panelsns.model.entity.Logic">
    insert into logic (id, ques_naire_id, ques_id, 
      ques_option_id, type, ctl_type, 
      out_type, out_value, version, 
      remark)
    values (#{id,jdbcType=BIGINT}, #{quesNaireId,jdbcType=BIGINT}, #{quesId,jdbcType=BIGINT}, 
      #{quesOptionId,jdbcType=BIGINT}, #{type,jdbcType=INTEGER}, #{ctlType,jdbcType=INTEGER}, 
      #{outType,jdbcType=INTEGER}, #{outValue,jdbcType=INTEGER}, #{version,jdbcType=INTEGER}, 
      #{remark,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.survey.panelsns.model.entity.Logic">
    insert into logic
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="quesNaireId != null">
        ques_naire_id,
      </if>
      <if test="quesId != null">
        ques_id,
      </if>
      <if test="quesOptionId != null">
        ques_option_id,
      </if>
      <if test="type != null">
        type,
      </if>
      <if test="ctlType != null">
        ctl_type,
      </if>
      <if test="outType != null">
        out_type,
      </if>
      <if test="outValue != null">
        out_value,
      </if>
      <if test="version != null">
        version,
      </if>
      <if test="remark != null">
        remark,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=BIGINT},
      </if>
      <if test="quesNaireId != null">
        #{quesNaireId,jdbcType=BIGINT},
      </if>
      <if test="quesId != null">
        #{quesId,jdbcType=BIGINT},
      </if>
      <if test="quesOptionId != null">
        #{quesOptionId,jdbcType=BIGINT},
      </if>
      <if test="type != null">
        #{type,jdbcType=INTEGER},
      </if>
      <if test="ctlType != null">
        #{ctlType,jdbcType=INTEGER},
      </if>
      <if test="outType != null">
        #{outType,jdbcType=INTEGER},
      </if>
      <if test="outValue != null">
        #{outValue,jdbcType=INTEGER},
      </if>
      <if test="version != null">
        #{version,jdbcType=INTEGER},
      </if>
      <if test="remark != null">
        #{remark,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByIdSelective" parameterType="com.survey.panelsns.model.entity.Logic">
    update logic
    <set>
      <if test="quesNaireId != null">
        ques_naire_id = #{quesNaireId,jdbcType=BIGINT},
      </if>
      <if test="quesId != null">
        ques_id = #{quesId,jdbcType=BIGINT},
      </if>
      <if test="quesOptionId != null">
        ques_option_id = #{quesOptionId,jdbcType=BIGINT},
      </if>
      <if test="type != null">
        type = #{type,jdbcType=INTEGER},
      </if>
      <if test="ctlType != null">
        ctl_type = #{ctlType,jdbcType=INTEGER},
      </if>
      <if test="outType != null">
        out_type = #{outType,jdbcType=INTEGER},
      </if>
      <if test="outValue != null">
        out_value = #{outValue,jdbcType=INTEGER},
      </if>
      <if test="version != null">
        version = #{version,jdbcType=INTEGER},
      </if>
      <if test="remark != null">
        remark = #{remark,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateById" parameterType="com.survey.panelsns.model.entity.Logic">
    update logic
    set ques_naire_id = #{quesNaireId,jdbcType=BIGINT},
      ques_id = #{quesId,jdbcType=BIGINT},
      ques_option_id = #{quesOptionId,jdbcType=BIGINT},
      type = #{type,jdbcType=INTEGER},
      ctl_type = #{ctlType,jdbcType=INTEGER},
      out_type = #{outType,jdbcType=INTEGER},
      out_value = #{outValue,jdbcType=INTEGER},
      version = #{version,jdbcType=INTEGER},
      remark = #{remark,jdbcType=VARCHAR}
    where id = #{id,jdbcType=BIGINT}
  </update>
  
  <sql id="Pagination_Sql">
    	SELECT t_1.*,t_2.uid mutual_uid,juc.follows,juc.fans
		FROM (
			SELECT juf.f_uid,juf.uid,juf.create_time,jup.nick_name,jup.profile_img_path
			FROM jian_user_follow juf,jian_user_profile jup where 1=1 
			 <choose>
	  			<when test="entity.fUid != null">
	  				and juf.f_uid=#{entity.fUid,jdbcType=BIGINT} and juf.uid=jup.uid
	  			</when>
	  			<when test="entity.uid != null">
	  				and juf.uid=#{entity.uid,jdbcType=BIGINT} and juf.f_uid=jup.uid
	  			</when>
	  		</choose>
		) t_1
		left join (
			SELECT juf.f_uid,juf.uid
			FROM jian_user_follow juf where 1=1
			 <choose>
				<when test="entity.fUid != null">
	  				and juf.uid=#{entity.fUid,jdbcType=BIGINT}
	  			</when>
	  			<when test="entity.uid != null">
	  				and juf.f_uid=#{entity.uid,jdbcType=BIGINT}
	  			</when>
  			</choose>
		) t_2
		 <choose>
			<when test="entity.fUid != null">
				on t_1.f_uid=t_2.uid and t_1.uid=t_2.f_uid
			</when>
			<when test="entity.uid != null">
				on t_1.uid=t_2.f_uid and t_1.f_uid=t_2.uid
			</when>
  		</choose>
  		left join jian_user_count juc  
  		 <choose>
			<when test="entity.fUid != null">
				on t_1.uid=juc.uid
			</when>
			<when test="entity.uid != null">
				on t_1.f_uid=juc.uid
			</when>
  		</choose>
  </sql>
  
  <select id="selectCount" parameterType="com.jian123.vo.user.JianUserFollowVO" resultType="java.lang.Long" >
    select count(*) from (
    	<include refid="Pagination_Sql" />
    ) t_count;
  </select>
  
  <select id="selectList" parameterType="com.jian123.vo.user.JianUserFollowVO" resultMap="PaginationResultMap">
 		<include refid="Pagination_Sql" />
		<![CDATA[ ORDER BY create_time DESC limit #{offset}, #{rows} ]]>
	</select>
	
</mapper>