<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.survey.panelsns.model.entity.LogicCondition">
  <resultMap id="BaseResultMap" type="com.survey.panelsns.model.entity.LogicCondition">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="logic_group_id" jdbcType="BIGINT" property="logicGroupId" />
    <result column="expression_val" jdbcType="BIGINT" property="expressionVal" />
    <result column="login_id" jdbcType="BIGINT" property="loginId" />
    <result column="version" jdbcType="INTEGER" property="version" />
    <result column="remark" jdbcType="VARCHAR" property="remark" />
    <result column="expression" jdbcType="LONGVARCHAR" property="expression" />
  </resultMap>
  <sql id="Base_Column_List">
    id, logic_group_id, expression_val, login_id, version, remark, expression
  </sql>
  <select id="selectById" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from logic_condition
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="delete" parameterType="java.lang.Long">
    delete from logic_condition
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="com.survey.panelsns.model.entity.LogicCondition">
    insert into logic_condition (id, logic_group_id, expression_val, 
      login_id, version, remark, 
      expression)
    values (#{id,jdbcType=BIGINT}, #{logicGroupId,jdbcType=BIGINT}, #{expressionVal,jdbcType=BIGINT}, 
      #{loginId,jdbcType=BIGINT}, #{version,jdbcType=INTEGER}, #{remark,jdbcType=VARCHAR}, 
      #{expression,jdbcType=LONGVARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.survey.panelsns.model.entity.LogicCondition">
    insert into logic_condition
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="logicGroupId != null">
        logic_group_id,
      </if>
      <if test="expressionVal != null">
        expression_val,
      </if>
      <if test="loginId != null">
        login_id,
      </if>
      <if test="version != null">
        version,
      </if>
      <if test="remark != null">
        remark,
      </if>
      <if test="expression != null">
        expression,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=BIGINT},
      </if>
      <if test="logicGroupId != null">
        #{logicGroupId,jdbcType=BIGINT},
      </if>
      <if test="expressionVal != null">
        #{expressionVal,jdbcType=BIGINT},
      </if>
      <if test="loginId != null">
        #{loginId,jdbcType=BIGINT},
      </if>
      <if test="version != null">
        #{version,jdbcType=INTEGER},
      </if>
      <if test="remark != null">
        #{remark,jdbcType=VARCHAR},
      </if>
      <if test="expression != null">
        #{expression,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateBySelectiveId" parameterType="com.survey.panelsns.model.entity.LogicCondition">
    update logic_condition
    <set>
      <if test="logicGroupId != null">
        logic_group_id = #{logicGroupId,jdbcType=BIGINT},
      </if>
      <if test="expressionVal != null">
        expression_val = #{expressionVal,jdbcType=BIGINT},
      </if>
      <if test="loginId != null">
        login_id = #{loginId,jdbcType=BIGINT},
      </if>
      <if test="version != null">
        version = #{version,jdbcType=INTEGER},
      </if>
      <if test="remark != null">
        remark = #{remark,jdbcType=VARCHAR},
      </if>
      <if test="expression != null">
        expression = #{expression,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="update" parameterType="com.survey.panelsns.model.entity.LogicCondition">
    update logic_condition
    set logic_group_id = #{logicGroupId,jdbcType=BIGINT},
      expression_val = #{expressionVal,jdbcType=BIGINT},
      login_id = #{loginId,jdbcType=BIGINT},
      version = #{version,jdbcType=INTEGER},
      remark = #{remark,jdbcType=VARCHAR},
      expression = #{expression,jdbcType=LONGVARCHAR}
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>